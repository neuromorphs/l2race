  modeling:
    NET_NAME: 'GRU-64H1-64H2'
    PREDICTION_FEATURES_NAMES: ['position_m.x','position_m.y','speed_m_per_sec','steering_angle_deg','body_angle_deg','yaw_rate_deg_per_sec','drift_angle_deg']

  paths:
    # PATH HAS TO END WITH A SOLIDUS ("/") CHARACTER
    path_to_experiment: 'Experiment-1/'
    PATH_TO_EXPERIMENT_FOLDERS: './SI_Toolkit_ApplicationSpecificFiles/Experiments/'  # Path where the experiments data is stored

  training_default:
    # For training closed loop dynamics model:
    control_inputs: ['command.steering','command.throttle']
    state_inputs: ['position_m.x','position_m.y','speed_m_per_sec','steering_angle_deg','body_angle_deg','yaw_rate_deg_per_sec','drift_angle_deg']
    setpoint_inputs: []
    outputs: ['position_m.x','position_m.y','speed_m_per_sec','steering_angle_deg','body_angle_deg','yaw_rate_deg_per_sec','drift_angle_deg']
    EPOCHS: 50
    BATCH_SIZE: 32
    SEED: 1873
    LR: 1.0e-2
    WASH_OUT_LEN: 10
    POST_WASH_OUT_LEN: 20
    ON_FLY_DATA_GENERATION: False
    NORMALIZE: True
    # Cartpole examples: For training open loop dynamics model:
    # inputs = ['position', 'positionD', 'angle_sin', 'angle_cos', 'angleD']
    # outputs = inputs_list
    # For training of RNN imitating MPC:
    # inputs = ['position', 'positionD', 'angle', 'angleD', 'target_position']
    # outputs = ['Q']
