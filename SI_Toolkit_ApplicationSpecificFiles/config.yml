  modeling:
    NET_NAME: 'GRU-32H1-32H2'
    PREDICTION_FEATURES_NAMES: ['position_m.x','position_m.y','velocity_m_per_sec.x','velocity_m_per_sec.y','speed_m_per_sec','accel_m_per_sec_2.x','accel_m_per_sec_2.y','steering_angle_deg','body_angle_deg','yaw_rate_deg_per_sec','drift_angle_deg']

  paths:
    # PATH HAS TO END WITH A SOLIDUS ("/") CHARACTER
    path_to_experiment: 'Experiment-1/'
    PATH_TO_EXPERIMENT_FOLDERS: './SI_Toolkit_ApplicationSpecificFiles/Experiments/'  # Path where the experiments data is stored

  training_default:
    # For training closed loop dynamics model:
    control_inputs: ['command.steering','command.throttle','command.brake']
    state_inputs: ['position_m.x','position_m.y','velocity_m_per_sec.x','velocity_m_per_sec.y','speed_m_per_sec','accel_m_per_sec_2.x','accel_m_per_sec_2.y','steering_angle_deg','body_angle_deg','yaw_rate_deg_per_sec','drift_angle_deg']
    setpoint_inputs: []
    outputs: ['position_m.x','position_m.y','velocity_m_per_sec.x','velocity_m_per_sec.y','speed_m_per_sec','accel_m_per_sec_2.x','accel_m_per_sec_2.y','steering_angle_deg','body_angle_deg','yaw_rate_deg_per_sec','drift_angle_deg']
    # Cartpole examples: For training open loop dynamics model:
    # inputs = ['position', 'positionD', 'angle_sin', 'angle_cos', 'angleD']
    # outputs = inputs_list
    # For training of RNN imitating MPC:
    # inputs = ['position', 'positionD', 'angle', 'angleD', 'target_position']
    # outputs = ['Q']

  testing:
    tests: ['Euler','GRU-6IN-32H1-32H2-5OUT-0']  # May be 'Euler', Euler-predictor, name of network or None = 'Dense-16H1-16H2'
    TEST_FILE: 'l2race-DESKTOP-oval_easy-20220218-144837.csv'
